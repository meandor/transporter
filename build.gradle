plugins {
    id 'net.researchgate.release' version '2.4.0'
    id 'io.codearte.nexus-staging' version '0.11.0'
}

apply plugin: 'scala'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'signing'

group = "com.github.meandor"

repositories {
    mavenCentral()
    mavenLocal()
}

def scalaVersion = "2.11"
def akkaVersion = "2.4.16"

dependencies {
    compile "org.scala-lang:scala-library:$scalaVersion"
    compile "ch.qos.logback:logback-classic:1.2.3"
    compile "com.typesafe.akka:akka-actor_$scalaVersion:$akkaVersion"
    compile "com.typesafe.akka:akka-slf4j_$scalaVersion:$akkaVersion"
    compile "com.typesafe.scala-logging:scala-logging_$scalaVersion:3.7.2"
    compile "io.prometheus:simpleclient:0.1.0"
    compile "io.prometheus:simpleclient_hotspot:0.1.0"

    testCompile "org.scalatest:scalatest_$scalaVersion:3.0.3"
    testCompile "com.typesafe.akka:akka-testkit_$scalaVersion:$akkaVersion"
}

task scaladocJar(type: Jar) {
    classifier = 'scaladoc'
    from scaladoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives scaladocJar, sourcesJar
}

signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'transporter'
                packaging 'jar'
                description 'Scala Library to teleport data to other places'
                url 'https://github.com/meandor/transporter'

                scm {
                    url 'scm:git@github.com:meandor/transporter.git'
                    connection 'scm:git@github.com:meandor/transporter.git'
                    developerConnection 'scm:git@github.com:meandor/transporter.git'
                }

                licenses {
                    license {
                        name 'MIT License'
                        url 'https://github.com/meandor/transporter/blob/master/LICENSE'
                    }
                }

                developers {
                    developer {
                        id 'dschruhl'
                        name 'Daniel Schruhl'
                        email 'danielschruhl@gmail.com'
                    }
                }
            }
        }
    }
}
